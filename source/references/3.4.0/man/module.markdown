---
layout: default
nav: references_man.html
title: puppet module Man Page
---

<div class='mp'>
<h2 id="NAME">NAME</h2>
<p class="man-name">
  <code>puppet-module</code> - <span class="man-whatis">Creates, installs and searches for modules on the Puppet Forge.</span>
</p>

<h2 id="SYNOPSIS">SYNOPSIS</h2>

<p>puppet module <var>action</var> [--environment production ]
[--modulepath $confdir/modules:/usr/share/puppet/modules ]</p>

<h2 id="DESCRIPTION">DESCRIPTION</h2>

<p>This subcommand can find, install, and manage modules from the Puppet Forge,
a repository of user-contributed Puppet code. It can also generate empty
modules, and prepare locally developed modules for release on the Forge.</p>

<h2 id="OPTIONS">OPTIONS</h2>

<p>Note that any configuration parameter that's valid in the configuration
file is also a valid long argument, although it may or may not be
relevant to the present action. For example, <code>server</code> and <code>run_mode</code> are valid
configuration parameters, so you can specify <code>--server &lt;servername></code>, or
<code>--run_mode &lt;runmode></code> as an argument.</p>

<p>See the configuration file documentation at
<a data-bare-link="true" href="http://docs.puppetlabs.com/references/stable/configuration.html">http://docs.puppetlabs.com/references/stable/configuration.html</a> for the
full list of acceptable parameters. A commented list of all
configuration options can also be generated by running puppet with
<code>--genconfig</code>.</p>

<dl>
<dt>--render-as FORMAT</dt><dd>The format in which to render output. The most common formats are <code>json</code>,
<code>s</code> (string), <code>yaml</code>, and <code>console</code>, but other options such as <code>dot</code> are
sometimes available.</dd>
<dt>--verbose</dt><dd>Whether to log verbosely.</dd>
<dt class="flush">--debug</dt><dd>Whether to log debug information.</dd>
<dt>--environment production</dt><dd>The environment Puppet is running in.  For clients
          (e.g., <code>puppet agent</code>) this determines the environment itself, which
          is used to find modules and much more.  For servers (i.e., <code>puppet master</code>)
          this provides the default environment for nodes we know nothing about.</dd>
<dt>--modulepath $confdir/modules:/usr/share/puppet/modules</dt><dd>The search path for modules, as a list of directories separated by the system
        path separator character. (The POSIX path separator is ':', and the
        Windows path separator is ';'.)</dd>
</dl>


<h2 id="ACTIONS">ACTIONS</h2>

<dl>
<dt><code>build</code> - Build a module release package.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module build [<var>path</var>]</p>

<p><code>DESCRIPTION</code></p>

<p>Prepares a local module for release on the Puppet Forge by building a
ready-to-upload archive file.</p>

<p>This action uses the Modulefile in the module directory to set metadata
used by the Forge. See <a data-bare-link="true" href="http://links.puppetlabs.com/modulefile">http://links.puppetlabs.com/modulefile</a> for more
about writing modulefiles.</p>

<p>After being built, the release archive file can be found in the module's
<code>pkg</code> directory.</p>

<p><code>RETURNS</code></p>

<p>Pathname object representing the path to the release archive.</p></dd>
<dt><code>changes</code> - Show modified files of an installed module.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module changes <var>path</var></p>

<p><code>DESCRIPTION</code></p>

<p>Shows any files in a module that have been modified since it was
installed. This action compares the files on disk to the md5 checksums
included in the module's metadata.</p>

<p><code>RETURNS</code></p>

<p>Array of strings representing paths of modified files.</p></dd>
<dt><code>generate</code> - Generate boilerplate for a new module.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module generate <var>name</var></p>

<p><code>DESCRIPTION</code></p>

<p>Generates boilerplate for a new module by creating the directory
structure and files recommended for the Puppet community's best practices.</p>

<p>A module may need additional directories beyond this boilerplate
if it provides plugins, files, or templates.</p>

<p><code>RETURNS</code></p>

<p>Array of Pathname objects representing paths of generated files.</p></dd>
<dt><code>install</code> - Install a module from the Puppet Forge or a release archive.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module install [--force | -f]
[--target-dir DIR | -i DIR]
[--ignore-dependencies]
[--version VER | -v VER]
<var>name</var></p>

<p><code>DESCRIPTION</code></p>

<p>Installs a module from the Puppet Forge or from a release archive file.</p>

<p>The specified module will be installed into the directory
specified with the <code>--target-dir</code> option, which defaults to
/Users/nick/Documents/modules.</p>

<p><code>OPTIONS</code>
<var>--force</var> | <var>-f</var> -
        Force overwrite of existing module, if any.</p>

<p><var>--ignore-dependencies</var> -
        Do not attempt to install dependencies.</p>

<p><var>--target-dir DIR</var> | <var>-i DIR</var> -
The directory into which modules are installed; defaults to the first
directory in the modulepath.</p>

<p>Specifying this option will change the installation directory, and
will use the existing modulepath when checking for dependencies. If
you wish to check a different set of directories for dependencies, you
must also use the <code>--environment</code> or <code>--modulepath</code> options.</p>

<p><var>--version VER</var> | <var>-v VER</var> -
Module version to install; can be an exact version or a requirement string,
eg '>= 1.0.3'. Defaults to latest version.</p>

<p><code>RETURNS</code></p>

<p>Pathname object representing the path to the installed module.</p></dd>
<dt><code>list</code> - List installed modules</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module list [--tree]</p>

<p><code>DESCRIPTION</code></p>

<p>Lists the installed puppet modules. By default, this action scans the
modulepath from puppet.conf's <code>[main]</code> block; use the --modulepath
option to change which directories are scanned.</p>

<p>The output of this action includes information from the module's
metadata, including version numbers and unmet module dependencies.</p>

<p><code>OPTIONS</code>
<var>--tree</var> -
Whether to show dependencies as a tree view</p>

<p><code>RETURNS</code></p>

<p>hash of paths to module objects</p></dd>
<dt><code>search</code> - Search the Puppet Forge for a module.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module search <var>search_term</var></p>

<p><code>DESCRIPTION</code></p>

<p>Searches a repository for modules whose names, descriptions, or keywords
match the provided search term.</p>

<p><code>RETURNS</code></p>

<p>Array of module metadata hashes</p></dd>
<dt><code>uninstall</code> - Uninstall a puppet module.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module uninstall [--force | -f] [--version=] <var>name</var></p>

<p><code>DESCRIPTION</code></p>

<p>Uninstalls a puppet module from the modulepath (or a specific
target directory).</p>

<p><code>OPTIONS</code>
<var>--force</var> | <var>-f</var> -
Force the uninstall of an installed module even if there are local
changes or the possibility of causing broken dependencies.</p>

<p><var>--version=</var> -
The version of the module to uninstall. When using this option, a module
matching the specified version must be installed or else an error is raised.</p>

<p><code>RETURNS</code></p>

<p>Hash of module objects representing uninstalled modules and related errors.</p></dd>
<dt><code>upgrade</code> - Upgrade a puppet module.</dt><dd><p><code>SYNOPSIS</code></p>

<p>puppet module upgrade [--force | -f]
[--ignore-dependencies]
[--version=]
<var>name</var></p>

<p><code>DESCRIPTION</code></p>

<pre><code>  Upgrades a puppet module.
</code></pre>

<p><code>OPTIONS</code>
<var>--force</var> | <var>-f</var> -
Force the upgrade of an installed module even if there are local
changes or the possibility of causing broken dependencies.</p>

<p><var>--ignore-dependencies</var> -
        Do not attempt to install dependencies</p>

<p><var>--version=</var> -
        The version of the module to upgrade to.</p>

<p><code>RETURNS</code></p>

<p>Hash</p></dd>
</dl>


<h2 id="EXAMPLES">EXAMPLES</h2>

<p><code>build</code></p>

<p>Build a module release:</p>

<p>$ puppet module build puppetlabs-apache
notice: Building /Users/kelseyhightower/puppetlabs-apache for release
Module built: /Users/kelseyhightower/puppetlabs-apache/pkg/puppetlabs-apache-0.0.1.tar.gz</p>

<p>Build the module in the current working directory:</p>

<p>$ cd /Users/kelseyhightower/puppetlabs-apache
$ puppet module build
notice: Building /Users/kelseyhightower/puppetlabs-apache for release
Module built: /Users/kelseyhightower/puppetlabs-apache/pkg/puppetlabs-apache-0.0.1.tar.gz</p>

<p><code>changes</code></p>

<p>Show modified files of an installed module:</p>

<p>$ puppet module changes /etc/puppet/modules/vcsrepo/
warning: 1 files modified
lib/puppet/provider/vcsrepo.rb</p>

<p><code>generate</code></p>

<p>Generate a new module in the current directory:</p>

<p>$ puppet module generate puppetlabs-ssh
notice: Generating module at /Users/kelseyhightower/puppetlabs-ssh
puppetlabs-ssh
puppetlabs-ssh/Modulefile
puppetlabs-ssh/README
puppetlabs-ssh/manifests
puppetlabs-ssh/manifests/init.pp
puppetlabs-ssh/spec
puppetlabs-ssh/spec/spec_helper.rb
puppetlabs-ssh/tests
puppetlabs-ssh/tests/init.pp</p>

<p><code>install</code></p>

<p>Install a module:</p>

<p>$ puppet module install puppetlabs-vcsrepo
Preparing to install into /etc/puppet/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/etc/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a module to a specific environment:</p>

<p>$ puppet module install puppetlabs-vcsrepo --environment development
Preparing to install into /etc/puppet/environments/development/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/etc/puppet/environments/development/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a specific module version:</p>

<p>$ puppet module install puppetlabs-vcsrepo -v 0.0.4
Preparing to install into /etc/puppet/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/etc/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a module into a specific directory:</p>

<p>$ puppet module install puppetlabs-vcsrepo --target-dir=/usr/share/puppet/modules
Preparing to install into /usr/share/puppet/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/usr/share/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a module into a specific directory and check for dependencies in other directories:</p>

<p>$ puppet module install puppetlabs-vcsrepo --target-dir=/usr/share/puppet/modules --modulepath /etc/puppet/modules
Preparing to install into /usr/share/puppet/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/usr/share/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a module from a release archive:</p>

<p>$ puppet module install puppetlabs-vcsrepo-0.0.4.tar.gz
Preparing to install into /etc/puppet/modules ...
Downloading from http://forge.puppetlabs.com ...
Installing -- do not interrupt ...
/etc/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p>Install a module from a release archive and ignore dependencies:</p>

<p>$ puppet module install puppetlabs-vcsrepo-0.0.4.tar.gz --ignore-dependencies
Preparing to install into /etc/puppet/modules ...
Installing -- do not interrupt ...
/etc/puppet/modules
└── puppetlabs-vcsrepo (v0.0.4)</p>

<p><code>list</code></p>

<p>List installed modules:</p>

<p>$ puppet module list
  /etc/puppet/modules
  ├── bodepd-create_resources (v0.0.1)
  ├── puppetlabs-bacula (v0.0.2)
  ├── puppetlabs-mysql (v0.0.1)
  ├── puppetlabs-sqlite (v0.0.1)
  └── puppetlabs-stdlib (v2.2.1)
  /usr/share/puppet/modules (no modules installed)</p>

<p>List installed modules in a tree view:</p>

<p>$ puppet module list --tree
  /etc/puppet/modules
  └─┬ puppetlabs-bacula (v0.0.2)
    ├── puppetlabs-stdlib (v2.2.1)
    ├─┬ puppetlabs-mysql (v0.0.1)
    │ └── bodepd-create_resources (v0.0.1)
    └── puppetlabs-sqlite (v0.0.1)
  /usr/share/puppet/modules (no modules installed)</p>

<p>List installed modules from a specified environment:</p>

<p>$ puppet module list --environment production
  /etc/puppet/modules
  ├── bodepd-create_resources (v0.0.1)
  ├── puppetlabs-bacula (v0.0.2)
  ├── puppetlabs-mysql (v0.0.1)
  ├── puppetlabs-sqlite (v0.0.1)
  └── puppetlabs-stdlib (v2.2.1)
  /usr/share/puppet/modules (no modules installed)</p>

<p>List installed modules from a specified modulepath:</p>

<p>$ puppet module list --modulepath /usr/share/puppet/modules
  /usr/share/puppet/modules (no modules installed)</p>

<p><code>search</code></p>

<p>Search the Puppet Forge for a module:</p>

<p>$ puppet module search puppetlabs
NAME          DESCRIPTION                          AUTHOR             KEYWORDS
bacula        This is a generic Apache module      @puppetlabs        backups</p>

<p><code>uninstall</code></p>

<p>Uninstall a module:</p>

<p>$ puppet module uninstall puppetlabs-ssh
Removed /etc/puppet/modules/ssh (v1.0.0)</p>

<p>Uninstall a module from a specific directory:</p>

<p>$ puppet module uninstall puppetlabs-ssh --modulepath /usr/share/puppet/modules
Removed /usr/share/puppet/modules/ssh (v1.0.0)</p>

<p>Uninstall a module from a specific environment:</p>

<p>$ puppet module uninstall puppetlabs-ssh --environment development
Removed /etc/puppet/environments/development/modules/ssh (v1.0.0)</p>

<p>Uninstall a specific version of a module:</p>

<p>$ puppet module uninstall puppetlabs-ssh --version 2.0.0
Removed /etc/puppet/modules/ssh (v2.0.0)</p>

<p><code>upgrade</code></p>

<p>upgrade an installed module to the latest version</p>

<p>$ puppet module upgrade puppetlabs-apache
/etc/puppet/modules
└── puppetlabs-apache (v1.0.0 -> v2.4.0)</p>

<p>upgrade an installed module to a specific version</p>

<p>$ puppet module upgrade puppetlabs-apache --version 2.1.0
/etc/puppet/modules
└── puppetlabs-apache (v1.0.0 -> v2.1.0)</p>

<p>upgrade an installed module for a specific environment</p>

<p>$ puppet module upgrade puppetlabs-apache --environment test
/usr/share/puppet/environments/test/modules
└── puppetlabs-apache (v1.0.0 -> v2.4.0)</p>

<h2 id="COPYRIGHT-AND-LICENSE">COPYRIGHT AND LICENSE</h2>

<p>Copyright 2012 by Puppet Labs
Apache 2 license; see COPYING</p>

</div>

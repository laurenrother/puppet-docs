---
layout: default
nav: references_man.html
title: puppet kick Man Page
---

<div class='mp'>
<h2 id="NAME">NAME</h2>
<p class="man-name">
  <code>puppet-kick</code> - <span class="man-whatis">Remotely control puppet agent</span>
</p>

<h2 id="SYNOPSIS">SYNOPSIS</h2>

<p>Trigger a puppet agent run on a set of hosts.</p>

<h2 id="USAGE">USAGE</h2>

<p>puppet kick [-a|--all] [-c|--class <var>class</var>] [-d|--debug] [-f|--foreground]
  [-h|--help] [--host <var>host</var>] [--no-fqdn] [--ignoreschedules]
  [-t|--tag <var>tag</var>] [--test] [-p|--ping] <var>host</var> [<var>host</var> [...]]</p>

<h2 id="DESCRIPTION">DESCRIPTION</h2>

<p>This script can be used to connect to a set of machines running 'puppet
agent' and trigger them to run their configurations. The most common
usage would be to specify a class of hosts and a set of tags, and
'puppet kick' would look up in LDAP all of the hosts matching that
class, then connect to each host and trigger a run of all of the objects
with the specified tags.</p>

<p>If you are not storing your host configurations in LDAP, you can specify
hosts manually.</p>

<p>You will most likely have to run 'puppet kick' as root to get access to
the SSL certificates.</p>

<p>'puppet kick' reads 'puppet master''s configuration file, so that it can
copy things like LDAP settings.</p>

<h2 id="USAGE-NOTES">USAGE NOTES</h2>

<p>Puppet kick needs the puppet agent on the target machine to be running as a
daemon, be configured to listen for incoming network connections, and have an
appropriate security configuration.</p>

<p>The specific changes required are:</p>

<ul>
<li>Set <code>listen = true</code> in the agent's <code>puppet.conf</code> file (or <code>--listen</code> on the
command line)</li>
<li>Configure the node's firewall to allow incoming connections on port 8139</li>
<li><p>Insert the following stanza at the top of the node's <code>auth.conf</code> file:</p>

<pre><code>  # Allow puppet kick access
  path    /run
  method  save
  auth    any
  allow   workstation.example.com
</code></pre></li>
</ul>


<p>This example would allow the machine <code>workstation.example.com</code> to trigger a
Puppet run; adjust the "allow" directive to suit your site. You may also use
<code>allow *</code> to allow anyone to trigger a Puppet run, but that makes it possible
to interfere with your site by triggering excessive Puppet runs.</p>

<p>See <code>http://docs.puppetlabs.com/guides/rest_auth_conf.html</code> for more details
about security settings.</p>

<h2 id="OPTIONS">OPTIONS</h2>

<p>Note that any configuration parameter that's valid in the configuration
file is also a valid long argument. For example, 'ssldir' is a valid
configuration parameter, so you can specify '--ssldir <var>directory</var>' as an
argument.</p>

<p>See the configuration file documentation at
http://docs.puppetlabs.com/references/latest/configuration.html for
the full list of acceptable parameters. A commented list of all
configuration options can also be generated by running puppet master
with '--genconfig'.</p>

<dl>
<dt class="flush">--all</dt><dd><p>Connect to all available hosts. Requires LDAP support at this point.</p></dd>
<dt class="flush">--class</dt><dd><p>Specify a class of machines to which to connect. This only works if
you have LDAP configured, at the moment.</p></dd>
<dt class="flush">--debug</dt><dd><p>Enable full debugging.</p></dd>
<dt>--foreground</dt><dd><p>Run each configuration in the foreground; that is, when connecting to
a host, do not return until the host has finished its run. The default
is false.</p></dd>
<dt class="flush">--help</dt><dd><p>Print this help message</p></dd>
<dt class="flush">--host</dt><dd><p>A specific host to which to connect. This flag can be specified more
than once.</p></dd>
<dt>--ignoreschedules</dt><dd><p>Whether the client should ignore schedules when running its
configuration. This can be used to force the client to perform work it
would not normally perform so soon. The default is false.</p></dd>
<dt>--parallel</dt><dd><p>How parallel to make the connections. Parallelization is provided by
forking for each client to which to connect. The default is 1, meaning
serial execution.</p></dd>
<dt>--puppetport</dt><dd><p>Use the specified TCP port to connect to agents. Defaults to 8139.</p></dd>
<dt class="flush">--tag</dt><dd><p>Specify a tag for selecting the objects to apply. Does not work with
the --test option.</p></dd>
<dt class="flush">--test</dt><dd><p>Print the hosts you would connect to but do not actually connect. This
option requires LDAP support at this point.</p></dd>
<dt class="flush">--ping</dt><dd><p>Do an ICMP echo against the target host. Skip hosts that don't respond
to ping.</p></dd>
</dl>


<h2 id="EXAMPLE">EXAMPLE</h2>

<pre><code>$ sudo puppet kick -p 10 -t remotefile -t webserver host1 host2
</code></pre>

<h2 id="AUTHOR">AUTHOR</h2>

<p>Luke Kanies</p>

<h2 id="COPYRIGHT">COPYRIGHT</h2>

<p>Copyright (c) 2011 Puppet Labs, LLC Licensed under the Apache 2.0 License</p>

</div>
